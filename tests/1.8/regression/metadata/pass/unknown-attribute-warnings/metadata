/* CTF 1.8 */
typealias integer { size = 8; align = 8; signed = false; aa = bb; } := uint8_t;
typealias integer { size = 32; align = 32; signed = false; zz = aa; } := uint32_t;

trace {
	major = 1;
	minor = 8;
	uuid = "2a6422d0-6cee-11e0-8c08-cb07d7b3a564";
	byte_order = le;
	packet.header := struct {
		uint32_t magic;
		uint8_t  uuid[16];
	};
	blah = "aaa";
};

stream {
	packet.context := struct {
		uint32_t content_size;
		uint32_t packet_size;
	};
	askdjfhaskdjfh = 1;
};

event {
	name = string;
	fields := struct { string str; };
	asdjfhah := struct { uint8_t ffff; };
};
