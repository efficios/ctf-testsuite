/* CTF 1.8 */
typealias integer { size = 8; align = 8; signed = false; base = hex; } := uint8_t;
typealias integer { size = 32; align = 32; signed = false; base = hex; } := uint32_t;

trace {
	major = 1;
	minor = 8;
	uuid = "2a6422d0-6cee-11e0-8c08-cb07d7b3a564";
	byte_order = le;
	packet.header := struct {
		uint32_t magic;
		uint8_t  uuid[16];
	};
};

event {
	name = myevent;
	fields := struct {
		enum : uint8_t { sel0 = 0, sel1 = 1, sel2 = 2, } mytag;
		variant <mytag> {
			uint8_t sel0[300];
			uint8_t sel1[200];
			uint8_t sel2;
		} v;
	};
};
